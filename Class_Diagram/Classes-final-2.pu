@startuml

package "User" {
    abstract class User {
        -userID: int
        -name: String
        -email: String
        -password: String
        -contact: String
        -address: String
        +updateProfile()
    }
}


package "Admin" {
    class Administrator extends User.User {
        -adminID: int
        -permissions: List<String>
        -activityLogs: List<String>
        -userGroups: List<String>
    }

    class CustomerManager {
        -customers: List<Customer>
        +createCustomerAccount()
        +editCustomerAccount()
        +deleteCustomerAccount()
        +setCustomerPermissions()
    }
    
    class SupplierManager {
        -suppliers: List<Supplier>
        +createSupplierAccount()
        +editSupplierAccount()
        +deleteSupplierAccount()
        +setSupplierPermissions()
    }
    
    class CommodityManager {
        +addCommodity(Commodity commodity): void
        +editCommodity(Commodity commodity): void
        +deleteCommodity(Commodity commodity): void
        +manageCommodityCategories(List<String> categories): void
    }
    
    class OrderManager {
        +viewOrders(): void
        +processOrders(Order order): void
        +trackOrderStatus(Order order): void
        +generateOrderReports(): void
        +manageReviews(Review review): void
        +managePayments(Payment payment): void
        +managePromotions(Advertisement advertisement): void
    }
    
    class WebServiceManager {
        +editContent(): void
        +manageAnnouncements(): void
        +manageAdvertisements(): void
        +setSEO(): void
    }
    
    class SystemManager {
        +setSecurity()
        +viewLogs()
        +monitorSystem()
        +backupData()
        +restoreData()
        +generateDataReports()
        +viewDataReports()
    }

    Administrator "1" *- "1"  WebServiceManager : manages
    Administrator "1" *- "1" SystemManager : manages
    Administrator "1" *-- "1" SupplierManager : manages
    Administrator "1" *-- "1" CustomerManager : manages
    Administrator "1" *-- "1" CommodityManager : manages
    Administrator "1" *-- "1" OrderManager : manages
}

package "Commodity Management" {
    class Commodity {
        -commodityID: int
        -name: String
        -sku: String
        -description: String
        -price: double
        -category: String
        -supplier: Supplier
        -quantity: int
        -images: List<String>
        -tags: List<String>
        -reviews: List<Review>
        -averageRating: double
    
        +addReview(Review review): void
        +getAverageRating(): double
        +updateQuantity(int quantity): void
        +updatePrice(double price): void
        +updateDescription(String description): void
        +updateCategory(String category): void
        +updateName(String name): void
    }
    class Advertisement {
        -adID: int
        -title: String
        -content: String
        -startDate: Date
        -endDate: Date
        -targetURL: String
        -isActive: boolean
    
        +activateAd(): void
        +deactivateAd(): void
        +getAdDuration(): int
        +isAdActive(): boolean
    }
}

package "Supplier Management" {
    class Supplier extends User.User {
        -shopName: String
        -contact: String
    }
    class Shop {
        -shopID: int
        -name: String
        -address: String
        -contact: String
        -description: String
        -rating: double
        -reviews: List<Review>
        -commodities: List<Commodity>
        -advertisements: List<Advertisement>
    }

    Shop *-- "0..*" Commodity : sells
    Shop *-- "0..*" Advertisement : publishes

    Supplier *-- "0..*" Shop : owns
}

package "Order Management" {
    class Order {
        -orderInfo: OrderInfo
        -deliveryInfo: DeliveryInfo
        -status: String
        -payment: Payment
    }
    
    class OrderInfo {
        -orderInfoID: int
        -customer: Customer
        -commodity: Commodity
        -quantity: int
        -totalPrice: double
    }
    
    class DeliveryInfo {
        -deliveryID: int
        -address: Address
        -deliveryStatus: String
        -deliveryDate: Date
        -deliveryTime: String
        -deliveryType: String
        -deliveryCost: double
    
        +updateDeliveryStatus(): void
        +updateDeliveryDate(): void
        +updateDeliveryTime(): void
        +updateDeliveryType(): void
        +updateDeliveryCost(): void
    }

    class Payment {
        -paymentID: int
        -paymentMethod: String
        -paymentStatus: String
        -paymentDate: Date
        -paymentAmount: double
    
        +updatePaymentStatus(): void
        +updatePaymentDate(): void
        +updatePaymentAmount(): void
    }

    class Address {
        -addressID: int
        -street: String
        -city: String
        -state: String
        -zip: String
        -country: String
        -contact: String
        -recipientName: String
        -isDefault: boolean

        +updateAddress(): void
    }

    Order "1" *-- "1" OrderInfo : has
    Order "1" *-- "1" DeliveryInfo : has
    Order "1" *-- "1" Payment : has
    DeliveryInfo "1" *-- "1" Address : has
    OrderManager "1" *-- "n" Order : manages
}

package "Customer Management" {
    class Customer extends User.User {
        -cart: Cart
        -orders: List<Order>
        -reviews: List<Review>
    }

    class Review {
        -reviewID: int
        -commodity: Commodity
        -rating: int
        -content: String
        -timestamp: Date

        +updateRating()
        +updateContent()
    }

    class Cart {
        -cartID: int
        -orderInfo: OrderInfo
        -commodities: List<Commodity>

        +addCommodity(Commodity commodity)
        +deleteCommodity(Commodity commodity)
        +updateTotalPrice()
    }

    Customer --> "0..*" Review : writes
    Customer --> "Commodity" : views
    CustomerManager "1" *-- "n" Customer : manages

    Commodity "1" *-- "0..*" Review : has

    Commodity "n" --> "1" Cart : added to
    Cart "1" -> Order : checkout
}

package "Chat Management" {
    class Message {
        -messageID: int
        -sender: User
        -receiver: User
        -content: String
        -timestamp: Date

        +getSender(): User
        +getReceiver(): User
        +updateContent()
    }

    class Chat {
        -chatID: int
        -customer: Customer
        -supplier: Supplier
        -messages: ArrayList<Message>

        +sendMessage(Message message)
        +receiveMessage(Message message)
        +viewChatHistory()
    }

    Chat "1" --> "0..*" Message : contains
    Chat --> Customer : involves
    Chat --> Supplier : involves
}


CommodityManager "1" *-- "n" Commodity : manages
SupplierManager "1" *-- "n" Supplier : manages

@enduml
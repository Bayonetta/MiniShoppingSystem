@startuml

abstract class People {
    -id: int
    -name: String
    -address: String
    -email: String
    -password: String
    +verifyLogin()
}

class Commodity {
    -id: int
    -name: String
    -price: double
    -seller: Supplier
    -catalog: Catalog
}

class Order {
    -id: int
    -customer: Customer
    -commodity: Commodity
    -quantity: int
    -totalPrice: double
    -deliveryInfo: DeliveryInfo
    -status: String
    -payment: Payment
}

class Administrator extends People {
    +addCustomer(Customer customer)
    +deleteCustomer(Customer customer)
    +addSupplier(Supplier supplier)
    +deleteSupplier(Supplier supplier)
    +manageOrders(Order order)
}

class Customer extends People {
    -cart: ArrayList<Commodity>
    +addOrder(Order order)
    +deleteOrder(Order order)
    +pay(Order order)
    +cancelOrder(Order order)
    +addToCart(Commodity commodity)
    +deleteFromCart(Commodity commodity)
    +addReview(Review review)
    +startChat(Supplier supplier)
}

class Supplier extends People {
    +addCommodity(Commodity commodity)
    +editCommodity(Commodity commodity)
    +editDeliveryInfo(DeliveryInfo deliveryInfo)
    +addAdvertisement(Advertisement advertisement)
    +viewReviews()
    +respondChat(Chat chat)
}

class Advertisement {
    -id: int
    -content: String
    -provider: Supplier
}

class DeliveryInfo {
    -id: int
    -address: String
    -phone: String
    -deliveryTime: String
    -deliveryFee: double
    -serviceProvider: String
}

class Payment {
    -id: int
    -order: Order
    -amount: double
    -paymentMethod: String
    -status: String
}

class Review {
    -id: int
    -commodity: Commodity
    -customer: Customer
    -rating: int
    -comment: String
    -date: Date
}

class Chat {
    -id: int
    -customer: Customer
    -supplier: Supplier
    -messages: ArrayList<Message>
    +sendMessage(Message message)
    +receiveMessage(Message message)
}

class Message {
    -id: int
    -sender: People
    -receiver: People
    -content: String
    -timestamp: Date
}

class Catalog {
    -productId: int
    -productName: string
    -productDescription: string
    -productCategory: string
    -productPrice: float
    -productStatus: string
    +searchProduct()
    +displayProduct()
}

Customer "1" -- "n" Order : places
Order "1" -- "1" DeliveryInfo : has
Order "1" -- "1" Commodity : contains
Order "1" -- "1" Payment : processedBy
Supplier "1" -- "n" Commodity : sells
Commodity "1" -- "n" Advertisement : isAdvertisedBy
Customer "1" -- "n" Commodity : addsToCart
Commodity "1" -- "n" Review : has
Customer "1" -- "n" Review : writes
Customer "1" -- "n" Chat : initiates
Supplier "1" -- "n" Chat : participatesIn
Chat "1" -- "n" Message : contains
Catalog "1" -- "1" Commodity : contains

@enduml
